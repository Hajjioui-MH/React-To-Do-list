{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/Input.js","components/Scroll.js","containers/App.js","serviceWorker.js","index.js"],"names":["Todo","text","checked","done","deleteMe","edit","dragStart","dragEnd","drop","style","color","opacity","className","draggable","onDragStart","onDragEnd","onDrop","textDecorationLine","onClick","TodoList","myTodo","checkHandler","deleteHandler","editHandler","dragStartHandler","dragEndtHandler","dropHandler","dragOverHandler","allTodo","map","todo","i","key","todoId","id","todoText","e","onDragOver","Input","getInput","addInput","value","clear","type","placeholder","name","onChange","Scroll","props","overflowY","border","height","width","children","App","inputHundler","setState","input","target","addHandler","preventDefault","state","list","length","newTodo","newList","concat","alert","parentElement","classList","add","filter","setTimeout","remove","getDragAfterElement","container","y","querySelectorAll","reduce","closest","child","box","getBoundingClientRect","offset","top","element","Number","NEGATIVE_INFINITY","document","querySelector","afterElement","clientY","appendChild","insertBefore","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.93dd2ba3.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Todo.css'\r\n\r\nconst Todo = ({text,checked,done,deleteMe,edit,dragStart,dragEnd,drop})=>{\r\n\tconst mstyle = {color: '#555',opacity:0.4};\r\n\treturn(\r\n\t\t<div style={checked?mstyle:null} className=\"todoWraaper draggable\" \r\n\t\tdraggable=\"true\" \r\n\t\tonDragStart={dragStart} \r\n\t\tonDragEnd={dragEnd}\r\n\t\tonDrop={drop}>\r\n\t\t\t<li style={checked?{textDecorationLine: 'line-through'}:null}>{text}</li>\r\n\t\t\t<button className='pa2 bg-yellow' onClick={edit} ><i className=\"far fa-edit\"></i></button>\r\n\t\t\t<button className='pa2 bg-green' onClick={done}>check</button>\r\n\t\t\t<button className='pa2 bg-red' onClick={deleteMe}>delete</button>\r\n\t\t</div>\r\n\t)\r\n\t\r\n}\r\n\r\n\r\nexport default Todo;","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nexport const TodoList = ({myTodo,checkHandler,deleteHandler,editHandler,dragStartHandler,dragEndtHandler,dropHandler,dragOverHandler})=>{\r\n\tconst allTodo = myTodo.map((todo,i)=>{\r\n\t\treturn(\r\n\t\t\t<Todo \r\n\t\t\tkey={todo.todoId} \r\n\t\t\tid={todo.todoId}\r\n\t\t\ttext={todo.todoText} \r\n\t\t\tchecked={todo.checked}\r\n\t\t\tdone={()=>checkHandler(todo.todoId)}\r\n\t\t\tdeleteMe={(e)=>deleteHandler(todo.todoId,e)}\r\n\t\t\tedit={()=>editHandler(todo.todoId)}\r\n\t\t\tdragStart={ (e)=> dragStartHandler(e,todo.todoId)}\r\n\t\t\tdragEnd = { (e)=> dragEndtHandler(e,todo.todoId)}  \r\n\t\t\tdrop={(e)=> dropHandler(e,todo.todoId)}\r\n\t\t\t/>\r\n\t\t)\r\n\t})\r\n\treturn(\r\n\t\t<div className='container ma0.5' onDragOver={dragOverHandler}>\r\n\t\t\t{allTodo}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TodoList;","import React from 'react'\r\nimport 'tachyons'\r\nimport './Input.css'\r\n\r\nconst Input = ({getInput,addInput,value,clear})=>{\r\n\treturn(\r\n\t\t<form className='flex mt2'>\r\n\t\t\t<input \r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search' \r\n\t\t\t\tvalue={value}\r\n\t\t\t\tplaceholder='Enter Task'\r\n\t\t\t\tname=\"input\"\r\n\t\t\t\tonChange={getInput}\r\n\t\t\t/>\r\n\t\t\t<input type=\"submit\" onClick={addInput} className='submit ml2' value=\"Add Me\" />\r\n\t\t\t<button \r\n\t\t\tclassName='pa2 ml2' \r\n\t\t\tonClick={clear}\r\n\t\t\t>Clear</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default Input;","import React from 'react'\r\n\r\n\r\nconst Scroll = (props)=>{\r\n\tconst scrollSyle = {overflowY : 'scroll', border : '0.5px solid black', height : '20em',width:'450px'}\r\n\treturn(\r\n\t\t<div style={scrollSyle}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Scroll;","import React ,{Component} from 'react'\r\nimport './App.css'\r\nimport TodoList from '../components/TodoList'\r\nimport Input from '../components/Input'\r\nimport Scroll from '../components/Scroll'\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tlist : [],\r\n\t\t\tinput : '',\r\n\t\t\tid:0,\r\n\t\t\tchecked:false\r\n\t\t}\r\n\t}\r\n\r\n\tinputHundler = (e)=>{\r\n\t\tthis.setState({input : e.target.value});\r\n\t}\r\n\taddHandler = (e)=>{\r\n\t\te.preventDefault();\r\n\t\tconst {list,input,id,checked} = this.state;\r\n\t\tif (input.length !== 0) {\r\n\t\t\tthis.setState({id : id+1});\r\n\t\t\tconst newTodo = {todoId:id,todoText:input,checked:checked}\r\n\t\t\tconst newList = list.concat(newTodo);\r\n\t\t\tthis.setState({list : newList,input : ''});\r\n\t\t}\r\n\t\telse\r\n\t\t\talert('vid input');\r\n\t\t\r\n\t}\r\n\tcheckHandler = (id)=>{\r\n\t\tconst newList = this.state.list.map(todo => {\r\n\t\t\tif (todo.todoId === id)\r\n\t\t\t\ttodo.checked = !todo.checked;\r\n\t\t\treturn todo;\r\n\t\t});\r\n\t\tthis.setState({list:newList})\r\n\t}\r\n\tdeleteHandler = (id,e)=>{\r\n\t\tconst todo_Div = e.target.parentElement;\r\n\t\ttodo_Div.classList.add(\"fall\");\r\n\t\tconst newList = this.state.list.filter(todo=>todo.todoId !== id);\r\n\t\tconst slowDelet = ()=> {\r\n\t\t\tthis.setState({list : newList});\r\n\t\t\treturn\r\n\t\t}\r\n\t\tsetTimeout( slowDelet, 400) ;\r\n\t}\r\n\teditHandler = (id)=>{\r\n\t\tconst {list} = this.state;\r\n\t\tconst todo = list.filter(todo=>todo.todoId === id)[0];\r\n\t\tconst newList = list.filter(todo=>todo.todoId !== id);\r\n\t\tthis.setState({input : todo.todoText , list : newList});\r\n\r\n\t}\r\n\tdragStartHandler = (e,id)=>{\r\n\t\tconst parent = e.target;\r\n\t\tparent.classList.add('dragging')\r\n\t}\r\n\tdragEndtHandler = (e,id)=>{\r\n\t\tconst parent = e.target;\r\n\t\tparent.classList.remove('dragging')\r\n\t}\r\n\tgetDragAfterElement = (container, y)=> {\r\n\t  const draggableElements = [...container.querySelectorAll('.draggable:not(.dragging)')]\r\n\r\n\t  return draggableElements.reduce((closest, child) => {\r\n\t\t    const box = child.getBoundingClientRect()\r\n\t\t    const offset = y - box.top - box.height / 2\r\n\t\t    if (offset < 0 && offset > closest.offset) {\r\n\t\t      return { offset: offset, element: child }\r\n\t\t    } else {\r\n\t\t      return closest\r\n\t\t    }\r\n\t  }, { offset: Number.NEGATIVE_INFINITY }).element\r\n\t}\r\n\tdragOverHandler = (e)=>{\r\n\t\te.preventDefault();\r\n\t\tconst container = document.querySelector('.container')\r\n\t\tconst afterElement = this.getDragAfterElement(container, e.clientY)\r\n\t    const draggable = document.querySelector('.dragging')\r\n\t    if (afterElement == null) {\r\n\t      container.appendChild(draggable)\r\n\t    } else {\r\n\t      container.insertBefore(draggable, afterElement)\r\n\t    }\r\n\t}\r\n\tdropHandler = (e,id)=>{\r\n\t\t//console.log('drop '+id);\r\n\t}\r\n\tclear = (e)=>{\r\n\t\te.preventDefault();\r\n\t\tthis.setState({list : [],input : ''});}\r\n\r\n\trender(){\r\n\t  return (\r\n\t\t    <div className=\"wrapper\">\r\n\t\t    <Scroll className='scroll'>\r\n\t\t\t      <TodoList \r\n\t\t\t      myTodo={this.state.list}\r\n\t\t\t      checkHandler={this.checkHandler}\r\n\t\t\t      deleteHandler={this.deleteHandler}\r\n\t\t\t      editHandler={this.editHandler}\r\n\t\t\t      dragStartHandler = { this.dragStartHandler }\r\n\t\t\t      dragEndtHandler = { this.dragEndtHandler } \r\n\t\t\t      dropHandler = {this.dropHandler}\r\n\t\t\t      dragOverHandler ={this.dragOverHandler}\r\n\t\t\t      />\r\n\t\t     </Scroll>\r\n\r\n\t\t      <Input \r\n\t\t      value={this.state.input} \r\n\t\t      addInput={this.addHandler} \r\n\t\t      getInput={this.inputHundler}\r\n\t\t      clear={this.clear}/>\r\n\t\t    </div>\r\n\t\t  );\r\n\t}\t\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}